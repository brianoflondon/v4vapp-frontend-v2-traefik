global:
  checkNewVersion: true
  sendAnonymousUsage: false  # true by default

# (Optional) Log information
# ---
log:
  level: DEBUG  # DEBUG, INFO, WARNING, ERROR, CRITICAL
#     format: common  # common, json, logfmt
#     filePath: /var/log/traefik/traefik.log

accesslog:
  format: common  # common, json, logfmt
  # filePath: /var/log/traefik/access.log


# (Optional) Enable API and Dashboard
# ---
api:
 dashboard: false  # true by default
 insecure: true

experimental:
  http3: true

entryPoints:
  web:
    address: :80
    # (Optional) Redirect to HTTPS
    http:
      redirections:
        entryPoint:
          to: websecure
          scheme: https

  websecure:
    address: :443

# These resolvers use Cloudflare DNS API instead of web challenge
certificatesResolvers:
  cloudflare-staging:
    acme:
      email: {env "CERT_EMAIL"}
      storage: /ssl-certs/acme.json
      caServer: "https://acme-staging-v02.api.letsencrypt.org/directory"
      dnsChallenge:
        provider: cloudflare

  cloudflare-production:
    acme:
      email: {env "CERT_EMAIL"}
      storage: /ssl-certs/acme.json
      caServer: "https://acme-v02.api.letsencrypt.org/directory"
      dnsChallenge:
        provider: cloudflare

  # Adding back to use let's encrypt without cloudflare
  staging:
    acme:
      email: {env "CERT_EMAIL"}
      storage: /ssl-certs/acme.json
      caServer: "https://acme-staging-v02.api.letsencrypt.org/directory"
      httpChallenge:
        entryPoint: web

  production:
    acme:
      email: {env "CERT_EMAIL"}
      storage: /ssl-certs/acme.json
      caServer: "https://acme-v02.api.letsencrypt.org/directory"
      httpChallenge:
        entryPoint: web


http:
  routers:
    dashboard:
      entryPoints:
        - "websecure"
      rule: Host(`2dash.v4v.app`) && (PathPrefix(`/api`) || PathPrefix(`/dashboard`))
      service: api@internal
      tls:
        certresolver: cloudflare-production

    dev-frontend:
      entryPoints:
        - "websecure"
      rule: Host(`2.v4v.app`)
      tls:
        certresolver: cloudflare-production
      service: dev-frontend

    dev-frontend-demo:
      entryPoints:
        - "websecure"
      rule: Host(`demo.v4v.app`)
      tls:
        certresolver: cloudflare-production
      service: dev-frontend

    guid-resolver:
      entryPoints:
        - "web"
        - "websecure"
      rule: Host(`guid.podping.org`)
      tls:
        certresolver: production
      service: guid-resolver

  services:
    dev-frontend:
      loadBalancer:
        servers:
          - url: "http://dev-frontend"

    guid-resolver:
      loadBalancer:
        servers:
          - url: "http://guid-slurp-api:80"

providers:
  docker:
    exposedByDefault: false  # Default is true
  file:
    # watch for dynamic configuration changes
    directory: /etc/traefik
    watch: true
